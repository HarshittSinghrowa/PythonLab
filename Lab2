Q-1) WAP to generate fibonacci series
  n = int(input("Enter the number of terms: "))
  a, b = 0, 1
  for i in range(n):
      print(a, end=" ")
      a, b = b, a + b

Q-2) WAP to calculate factorial using a loop
  n = int(input("Enter a number: "))
  
  factorial = 1
  for i in range(1, n + 1):
      factorial *= i
  
  print(f"The factorial of {n} is: {factorial}")

Q-3) WAP to check gien number is armstrong or not
  n = int(input("Enter a number: "))
  num_str = str(n)
  num_digits = len(num_str)
  sum_of_powers = sum(int(digit) ** num_digits for digit in num_str)
  
  if sum_of_powers == n:
      print(f"{n} is an Armstrong number.")
  else:
      print(f"{n} is not an Armstrong number.")

Q-4) WAP to check given number is perefect number or not
  n = int(input("Enter a number: "))
  sum_of_divisors = sum(i for i in range(1, n) if n % i == 0)
  
  if sum_of_divisors == n:
      print(f"{n} is a perfect number.")
  else:
      print(f"{n} is not a perfect number.")

Q-5) WAP to check if given number is strong or not
  def factorial(n):
      fact = 1
      for i in range(1, n + 1):
          fact *= i
      return fact
  
  n = int(input("Enter a number: "))
  sum_of_factorials = sum(factorial(int(digit)) for digit in str(n))
  
  if sum_of_factorials == n:
      print(f"{n} is a Strong number.")
  else:
      print(f"{n} is not a Strong number.")

Q-6) WAP to print multiplication of tables
  n = int(input("Enter a number: "))
  for i in range(1, 11):
      print(f"{n} x {i} = {n * i}")

Q-7) WAP to calculate the LCM and GCD of two numbers
  def gcd(a, b):
      while b:
          a, b = b, a % b
      return a
  
  def lcm(a, b):
      return (a * b) // gcd(a, b)
  
  num1 = int(input("Enter the first number: "))
  num2 = int(input("Enter the second number: "))
  
  gcd_value = gcd(num1, num2)
  lcm_value = lcm(num1, num2)
  
  print(f"GCD of {num1} and {num2} is: {gcd_value}")
  print(f"LCM of {num1} and {num2} is: {lcm_value}")
